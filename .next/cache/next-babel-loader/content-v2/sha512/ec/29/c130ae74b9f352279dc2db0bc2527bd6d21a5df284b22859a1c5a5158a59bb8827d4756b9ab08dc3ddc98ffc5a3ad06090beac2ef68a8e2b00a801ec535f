{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jhonathan/Documentos/github/NLW#4/adesso-next/src/contexts/CountdownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      IsActive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setIsActive(false);\n    setTime(25 * 60);\n    setHasFinished(false);\n  }\n\n  useEffect(function () {\n    if (IsActive && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (IsActive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [IsActive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      IsActive: IsActive,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountdownProvider, \"PfGZZOCGzwofXZiupLg9soBDsyg=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["/home/jhonathan/Documentos/github/NLW#4/adesso-next/src/contexts/CountdownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallenge","time","setTime","IsActive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SAAmBA,aAAnB,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoEC,QAApE,QAAoF,OAApF;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,oBACtCP,UAAU,CAACG,iBAAD,CAD4B;AAAA,MAC5DK,iBAD4D,eAC5DA,iBAD4D;;AAAA,kBAG5CN,QAAQ,CAAC,KAAK,EAAN,CAHoC;AAAA,MAG7DO,IAH6D;AAAA,MAGvDC,OAHuD;;AAAA,mBAIpCR,QAAQ,CAAC,KAAD,CAJ4B;AAAA,MAI7DS,QAJ6D;AAAA,MAInDC,WAJmD;;AAAA,mBAK9BV,QAAQ,CAAC,KAAD,CALsB;AAAA,MAK7DW,WAL6D;AAAA,MAKhDC,cALgD;;AAOpE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACtBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASQ,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,KAAK,EAAN,CAAP;AACAI,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH;;AAEDb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,QAAQ,IAAIF,IAAI,GAAG,CAAvB,EAA0B;AACtBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAM;AAChCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAIE,QAAQ,IAAIF,IAAI,KAAK,CAAzB,EAA4B;AAC/BK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AACJ,GAVQ,EAUN,CAACG,QAAD,EAAWF,IAAX,CAVM,CAAT;AAYA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BM,MAAAA,OAAO,EAAPA,OAD8B;AAE9BG,MAAAA,OAAO,EAAPA,OAF8B;AAG9BL,MAAAA,WAAW,EAAXA,WAH8B;AAI9BF,MAAAA,QAAQ,EAARA,QAJ8B;AAK9BQ,MAAAA,cAAc,EAAdA,cAL8B;AAM9BC,MAAAA,cAAc,EAAdA;AAN8B,KAAlC;AAAA,cAQKb;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7CeD,iB;;KAAAA,iB","sourcesContent":["import { Children, createContext, ReactNode, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\"\n\ninterface CountdownContextData {\n    minutes: number;\n    seconds: number;\n    hasFinished: boolean;\n    IsActive: boolean;\n    startCountdown: () => void;\n    resetCountdown: () => void;\n}\n\ninterface CountdownProviderProps {\n    children: ReactNode;\n}\n\nexport const CountdownContext = createContext({} as CountdownContextData)\n\nlet countdownTimeout: NodeJS.Timeout;\n\nexport function CountdownProvider({ children }: CountdownProviderProps) {\n    const { startNewChallenge } = useContext(ChallengesContext);\n\n    const [time, setTime] = useState(25 * 60);\n    const [IsActive, setIsActive] = useState(false);\n    const [hasFinished, setHasFinished] = useState(false)\n\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n\n    function startCountdown() {\n        setIsActive(true);\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeout);\n        setIsActive(false);\n        setTime(25 * 60)\n        setHasFinished(false);\n    }\n\n    useEffect(() => {\n        if (IsActive && time > 0) {\n            countdownTimeout = setTimeout(() => {\n                setTime(time - 1);\n            }, 1000)\n        } else if (IsActive && time === 0) {\n            setHasFinished(true);\n            setIsActive(false);\n            startNewChallenge();\n        }\n    }, [IsActive, time])\n\n    return (\n        <CountdownContext.Provider value={{\n            minutes,\n            seconds,\n            hasFinished,\n            IsActive,\n            startCountdown,\n            resetCountdown,\n        }}>\n            {children}\n        </CountdownContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}